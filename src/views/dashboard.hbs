<div class="container-fluid d-flex justify-content-center">
    <div class="container-fluid" style="border-radius: 10px; padding-top: 25px; padding-inline: 15px;">
        <div class="grid justify-items-end">
            <button class="text-white font-bold py-2 px-4 rounded" onclick="openModalSensor()">
                <img src="img/add.png" class="w-10 h-10 object-cover">
            </button>
        </div>
        <h3 class="text-center font-semibold text-2xl lg:text-4xl text-stone-600">Sensors</h3>
        <div class="grid grid-cols-2 sm:grid-cols-4 lg:grid-cols-4 gap-4 mt-2">{{#each dataSensor}}
                <div id="{{sensor_id}}" class="rounded-lg drop-shadow-lg bg-slate-50">
                    <div class="h-auto mx-3 my-2">
                        <div class="text-center text-stone-600 text-sm font-bold">
                            <span>{{title}}</span>
                        </div>
                        <div class="text-center text-orange-600 text-4xl font-bold">
                            <h1>{{value}}</h1>
                        </div>
                        <hr class="w-4/5 bg-neutral-800 my-2 mx-auto">
                        </hr>
                        <div class="text-center text-stone-600 text-lg font-medium  justify-self-end">
                            <h5 class="inline-block">(<span>{{suffix}}</span>)</h5>
                        </div>
                    </div>
                </div>
            {{/each}}</div>
        <hr class="w-full bg-stone-600 mx-auto mt-12 mb-8 rounded-lg" style="height: 3px">
        <div class="">
            <div class="grid justify-items-end">
                <button class="text-white font-bold py-2 px-4 rounded" onclick="openModalSwitch()">
                    <img src="img/add.png" class="w-10 h-10 object-cover">
                </button>
            </div>
            <h3 class="text-center font-semibold text-2xl lg:text-4xl text-stone-600">Switches</h3>
            <div class="grid grid-cols-2 sm:grid-cols-4 lg:grid-cols-4 gap-4 mt-2">
                {{#each dataSwitch}}
                    <div id="{{switch_id}}" class="rounded-lg drop-shadow-lg bg-slate-50">
                        <div class="mx-3 my-2 w-auto h-auto rounded-lg">
                            <h4 class="text-center text-stone-600 text-sm font-bold">{{title}}</h4>
                            <div
                                class="mt-2 mx-auto w-12 h-12 grid justify-items-center content-center toggle-switch relative">
                                <img src="img/fan_off.png"
                                    class="rounded-lg float-start img-responsive power-switch img-{{switch_id}} cursor-pointer"
                                    alt="power" onclick="handleImageClick('{{switch_id}}')">
                            </div>
                        </div>
                    </div>
                {{/each}}
            </div>
        </div>
    </div>
    <div class="h-full">
        <div id="myModal" class="fixed top-0 left-0 z-50 w-full h-full backdrop-filter backdrop-blur-sm hidden">
            <div class="mx-auto max-w-md bg-white rounded-lg p-5 drop-shadow-lg mt-16">
                <h2 class="text-2xl font-bold text-center mb-4">Add New Sensor</h2>
                <form>
                    <div class="mb-3">
                        <label for="sensorTitle" class="block text-gray-700 font-bold">Title</label>
                        <input placeholder="Humidity" type="text" id="sensorTitle" name="sensorTitle"
                            class="w-full rounded-lg border border-gray-300 py-2 px-2 text-gray-700 font-medium"
                            required>
                    </div>
                    <div class="mb-3">
                        <label for="sensorUnit" class="block text-gray-700 font-bold">Unit</label>
                        <input placeholder="%" type="text" id="sensorUnit" name="sensorUnit"
                            class="w-full rounded-lg border border-gray-300 py-2 px-2 text-gray-700 font-medium"
                            required>
                    </div>
                    <div class="grid">
                        <button onclick="submitSensorForm()" type="submit"
                            class="bg-blue-500 text-white font-bold py-2 px-4 rounded-lg border-2 border-sky-600">Submit</button>
                    </div>
                </form>
                <div class="grid">
                    <button class="text-gray-600 font-bold text-center border-2 mt-2 py-2 px-4 rounded-lg"
                        onclick="closeModalSensor()">Close</button>
                </div>
            </div>
        </div>
    </div>
    <div class="h-full">
        <div id="myModalSwitch" class="fixed top-0 left-0 z-50 w-full h-full backdrop-filter backdrop-blur-sm hidden">
            <div class="mx-auto max-w-md bg-white rounded-lg p-5 drop-shadow-lg mt-16">
                <h2 class="text-2xl font-bold text-center mb-4">Add New Switch</h2>
                <form>
                    <div class="mb-3">
                        <button id="dropdownDefaultButton" data-dropdown-toggle="dropdown"
                            class="w-full h- text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center inline-flex items-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"
                            type="button" onclick="toggleDropdown()">Dropdown button <svg class="w-2.5 h-2.5 ms-3"
                                aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 10 6">
                                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"
                                    stroke-width="2" d="m1 1 4 4 4-4" />
                            </svg>
                        </button>
                        <div id="dropdown"
                            class="z-10 hidden bg-white divide-y divide-gray-100 rounded-lg shadow w-44 dark:bg-gray-700">
                            <ul class="py-2 text-sm text-gray-700 dark:text-gray-200"
                                aria-labelledby="dropdownDefaultButton">
                                <li>
                                    <a href="#" onclick="selectItem('Fan')"
                                        class="block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">Fan</a>
                                </li>
                                <li>
                                    <a href="#" onclick="selectItem('Pump')"
                                        class="block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">Pump</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                    <form id="myForm" class="grid">
                        <div class="mb-3">
                            <label for="customTitle" class="text-gray-700 dark:text-gray-200">Custom Title:</label>
                            <input type="text" id="customTitle" name="customTitle"
                                class="w-full border-2 border-gray-300 rounded-md p-2">
                        </div>
                        <input type="hidden" id="selectedItem" name="selectedItem" value="">
                        <button type="submit"
                            class="w-full bg-blue-500 text-white font-bold py-2 px-4 rounded-lg border-2 border-sky-600"
                            onclick="submitSwitchForm()">Submit</button>
                    </form>
                    <div class="grid">
                        <button class="text-gray-600 font-bold text-center border-2 mt-2 py-2 px-4 rounded-lg"
                            onclick="closeModalSwitch()">Close</button>
                    </div>
            </div>
        </div>
    </div>
    <div style="background-color: rgba(51, 65, 85, 0.75);" id="loadingOverlay"
        class="fixed inset-0 flex items-center justify-center rounded-lg hidden">
        <h4 class="text-white">Loading...</h4>
    </div>
    <script>
        const socket = io();
        const database = firebase.database();

        database.ref('/EWA4tWTQAgiVf9AJiYbAxUKsew2lbZqk/Wietech').on('value', snapshot => {
            const dataSensor = snapshot.val().sensors;
            const dataSwitch1 = snapshot.val().switches1;

            socket.on('sensor_data', (e) => {


                for (let i = 0; i < e?.data?.length; i++) {
                    const sensorData = e?.data[i];
                    const element = document.getElementById(e?.data[i]?.sensor_id);

                    if (element) {
                        const updatedHTML = `
                <div id="${sensorData?.sensor_id}" class="rounded-lg bg-slate-50">
                    <div class="h-auto mx-3 my-2">
                        <div class="text-center text-stone-600 text-sm font-bold">
                            <span>${sensorData?.title}</span>
                        </div>
                        <div class="text-center text-orange-600 text-4xl font-bold">
                            <h1>${sensorData?.value}</h1>
                        </div>
                        <hr class="w-4/5 bg-neutral-800 my-2 mx-auto">
                        </hr>
                        <div class="text-center text-stone-600 text-lg font-medium  justify-self-end">
                            <h5 class="inline-block">(<span>${sensorData?.suffix}</span>)</h5>
                        </div>
                    </div>
                </div>`;

                        element.innerHTML = updatedHTML;
                    }

                }
            })

            socket.on('switch_data', (e) => {
                for (let i = 0; i < e?.data?.length; i++) {
                    const value = +e?.data[i]?.value;
                    const type = +e?.data[i]?.type;
                    const switchId = e?.data[i]?.switch_id;
                    const imgElement = document.querySelector(`.img-${switchId}`);


                    if (imgElement) {
                        const imageSrc = value && type === 1 ? 'img/fan_on.png' : !value && type === 1 ? 'img/fan_off.png' : value && type === 2 ? 'img/pump_on.png' : 'img/pump_off.png';
                        imgElement.src = imageSrc;
                    }
                }
            });



            const toggleSwitches = document.getElementsByClassName('toggle-switch');
            for (let i = 0; i < toggleSwitches.length; i++) {
                const toggleSwitch = toggleSwitches[i];
                const clonedToggleSwitch = toggleSwitch.cloneNode(true);
                toggleSwitch.replaceWith(clonedToggleSwitch);
            }


            for (let i = 0; i < toggleSwitches.length; i++) {

                toggleSwitches[i].addEventListener('click', function () {
                    handleImageClick()
                    const currentValue = +dataSwitch1[i]?.value;
                    const type = +dataSwitch1[i]?.type;

                    const updatedValue = currentValue === 0 ? 1 : 0;
                    const imgElement = this.querySelector('img');
                    const imageSrc = currentValue && type === 1 ? 'img/fan_on.png' : !currentValue && type === 1 ? 'img/fan_off.png' : currentValue && type === 2 ? 'img/pump_on.png' : 'img/pump_off.png';
                    imgElement.src = imageSrc;


                    database.ref(`/EWA4tWTQAgiVf9AJiYbAxUKsew2lbZqk/Wietech/switches1/${i}`).set({ ...dataSwitch1[i], value: updatedValue });

                    socket.emit('updateSwitches', { ...dataSwitch1[i], value: updatedValue });
                });
            }

        });


        function handleImageClick() {
            const loadingOverlay = document.getElementById(`loadingOverlay`);
            loadingOverlay.classList.remove('hidden');

            setTimeout(() => {
                loadingOverlay.classList.add('hidden');
            }, 1000);
        }



        function openModalSensor() {
            document.getElementById('myModal').classList.remove('hidden');
        }

        function closeModalSensor() {
            document.getElementById('myModal').classList.add('hidden');
        }

        function openModalSwitch() {
            document.getElementById('myModalSwitch').classList.remove('hidden');
        }

        function closeModalSwitch() {
            document.getElementById('myModalSwitch').classList.add('hidden');
        }

        window.onload = function () {
            closeModalSensor();
            closeModalSwitch()
        };

        let selectedItemId = '';

        function toggleDropdown() {
            const dropdown = document.getElementById('dropdown');
            dropdown.classList.toggle('hidden');
        }

        function selectItem(itemId) {
            const dropdownButton = document.getElementById('dropdownDefaultButton');
            dropdownButton.innerText = `Selected: ${itemId}`;

            selectedItemId = itemId;

            toggleDropdown();
        }

        function submitSwitchForm() {

            document.getElementById('selectedItem').value = selectedItemId;

            const type = selectedItemId == 'Fan' ? 1 : 2

            const customTitle = document.getElementById('customTitle').value;
            const params = {
                value: 0,
                type: type,
                title: customTitle,
                name: customTitle,

            }
            socket.emit('addSwitch', params);

        }

        function submitSensorForm() {
            const title = document.getElementById('sensorTitle').value;
            const unit = document.getElementById('sensorUnit').value;
            const params = {

                title: title,
                unit: unit,
            }
            socket.emit('addSensor', params);


        }

    </script>