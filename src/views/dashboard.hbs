<div class="container-fluid d-flex justify-content-center">
    <div>
        <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">Add New Button</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <form>
                        <div class="mb-3">
                            <div><label style="font-size: 18px; margin-left: 20px; margin-top: 20px;"
                                    class="form-label">Button Name</label>
                                <input style=" width: 90%; margin-left: 20px;" type="text" class="form-control"
                                    id="btn-name" aria-describedby="emailHelp">
                            </div>
                        </div>
                        <div class="mb-3 d-flex justify-content-center">
                            <div class="dropdown">
                                <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton1"
                                    data-bs-toggle="dropdown" aria-expanded="false"> Button Type </button>
                                <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1">
                                    <li><a class="dropdown-item" href="#">Light</a></li>
                                    <li><a class="dropdown-item" href="#">Fan</a></li>
                                    <li><a class="dropdown-item" href="#">Motor</a></li>
                                </ul>
                            </div>
                        </div>
                    </form>
                    <div class="modal-footer d-flex justify-content-center">
                        <button style="margin-right: 30px;" type="button" class="btn btn-secondary"
                            data-bs-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Save</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="container-fluid" style="border-radius: 10px; padding-top: 25px; padding-inline: 15px;">
        <h3 class="text-center font-semibold text-2xl lg:text-4xl text-stone-600">Sensors</h3>
        <div class="grid grid-cols-2 sm:grid-cols-4 lg:grid-cols-4 gap-4 mt-2">{{#each dataSensor}}
                <div id="{{@key}}" class="rounded-lg drop-shadow-lg bg-slate-50">
                    <div class="h-auto mx-3 my-2">
                        <div class="text-center text-stone-600 text-sm font-bold">
                            <span>{{title}}</span>
                        </div>
                        <div class="text-center text-orange-600 text-4xl font-bold">
                            <h1>{{value}}</h1>
                        </div>
                        <hr class="w-4/5 bg-neutral-800 my-2 mx-auto">
                        </hr>
                        <div class="text-center text-stone-600 text-lg font-medium  justify-self-end">
                            <h4 class="inline-block">{{name}}</h4>
                        </div>
                    </div>
                </div>
            {{/each}}</div>
        <hr class="w-full bg-stone-600 mx-auto mt-12 mb-8 rounded-lg" style="height: 3px">
        <div class="">
            <h3 class="text-center font-semibold text-2xl lg:text-4xl text-stone-600">Switches</h3>
            <div class="grid grid-cols-2 sm:grid-cols-4 lg:grid-cols-4 gap-4 mt-2">
                {{#each dataSwitch}}
                    <div id="{{switch_id}}" class="rounded-lg drop-shadow-lg bg-slate-50">
                        <div class=" mx-3 my-2 w-auto h-auto rounded-lg">
                            <h4 class="text-center text-stone-600 text-sm font-bold">{{title}}</h4>
                            <div class="mt-2 mx-auto w-12 h-12 grid justify-items-center content-center toggle-switch">
                                <img src="{{#if value}}img/power_on_new.png{{else}}img/power_off_new.png{{/if}}"
                                    class="rounded-lg float-start img-responsive power-switch img-{{switch_id}}"
                                    alt="power">
                            </div>
                        </div>
                    </div>
                {{/each}}
            </div>
        </div>
    </div>
</div>
<script>
    const socket = io();
    const database = firebase.database();

    database.ref('/EWA4tWTQAgiVf9AJiYbAxUKsew2lbZqk/Wietech').on('value', snapshot => {
        const dataSensor = snapshot.val().sensors;
        const dataSwitch1 = snapshot.val().switches1;

        socket.on('sensor_data', (e) => {

            for (let i = 0; i < e?.data?.length; i++) {
                const value = e?.data[i]?.value;
                const element = document.getElementById(e?.data[i]?.sensor_id);

                if (element) {
                    element.querySelector('.fw-bold').textContent = value;
                }

            }
        })

        socket.on('switch_data', (e) => {
            for (let i = 0; i < e?.data?.length; i++) {
                const value = +e?.data[i]?.value;
                const switchId = e?.data[i]?.switch_id;
                const imgElement = document.querySelector(`.img-${switchId}`);
                console.log(imgElement);

                if (imgElement) {
                    const imageSrc = value ? 'img/power_on_new.png' : 'img/power_off_new.png';
                    imgElement.src = imageSrc;
                }
            }
        });



        const toggleSwitches = document.getElementsByClassName('toggle-switch');
        for (let i = 0; i < toggleSwitches.length; i++) {
            const toggleSwitch = toggleSwitches[i];
            const clonedToggleSwitch = toggleSwitch.cloneNode(true);
            toggleSwitch.replaceWith(clonedToggleSwitch);
        }


        for (let i = 0; i < toggleSwitches.length; i++) {
            toggleSwitches[i].addEventListener('click', function () {
                const currentValue = +dataSwitch1[i]?.value;
                const updatedValue = currentValue === 0 ? 1 : 0;
                const imgElement = this.querySelector('img');
                const imageSrc = updatedValue ? 'img/power_on_new.png' : 'img/power_off_new.png';
                imgElement.src = imageSrc;

                // Update the value
                database.ref(`/EWA4tWTQAgiVf9AJiYbAxUKsew2lbZqk/Wietech/switches1/${i}`).set({ ...dataSwitch1[i], value: updatedValue });

                socket.emit('updateSwitches', { ...dataSwitch1[i], value: updatedValue });
            });
        }

    });

</script>